{"version":3,"sources":["re_frisk_shell/re_com/ui.cljs"],"mappings":";;AAEA,AAAA,AAAA,AAAAA,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AACFQ;AADJ,AACW,AAAA,AAACC,AAAgBD;;;AAD5B,AAAA,AAAA,AAAAN,AAAMF,AAEiBQ;AAFvB,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAEYO;AAFZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAG4DA,AAAUF;;;AAHtE,AAAA,AAAA,AAAMR;;AAAN,AAKA,AAAA,AAAMW,AAAYC,AAAMJ;AAAxB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACwDI,AAAOJ;;AAE/D,AAAA,AAAA,AAAAV,AAAMgB;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAb,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMa,AACFC;AADJ,AACS,AAAA,AAACC,AAAYD;;;AADtB,AAAA,AAAA,AAAMD,AAEFG,AAAKF;AAFT,AAAA,AAAA,AAGS,AAAA,AAAA,AAACG,AAAc,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACA,AAAkD,AAAA,AAAQD,AAAQ,AAAA,AAACE,AAAOF,AAC/FF;;;AAJJ,AAAA,AAAA,AAAMD;;AAAN","names":["var_args","G__43565","re-frisk-shell.re-com.ui/small-button","js/Error","p__43573","map__43574","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","label","re_frisk_shell.re_com.ui.small_button.cljs$core$IFn$_invoke$arity$2","on-click","re-frisk-shell.re-com.ui/big-button","style","G__43580","re-frisk-shell.re-com.ui/scroller","div","re_frisk_shell.re_com.ui.scroller.cljs$core$IFn$_invoke$arity$2","attr","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns re-frisk-shell.re-com.ui)\n\n(defn small-button\n  ([label] (small-button {} label))\n  ([{:keys [on-click]} label]\n   [:a {:href \"#\" :class \"btn btn-primary btn-xs\" :on-click on-click} label]))\n\n(defn big-button [style label]\n  [:a {:href \"#\" :class \"btn btn-primary btn-lg\" :style style} label])\n\n(defn scroller\n  ([div] (scroller {} div))\n  ([attr div]\n   [:div (merge {:style (merge {:overflow \"auto\" :height \"100%\" :flex \"1\"} (:style attr))} (dissoc attr :style))\n    div]))"]}