{"version":3,"sources":["multis/web3_fx.cljs"],"mappings":"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","names":["var_args","G__40729","multis.web3-fx/fn-dispatch","js/Error","evt","multis.web3_fx.fn_dispatch.cljs$core$IFn$_invoke$arity$2","args-base","args-fn","G__40751","re-frame.core/dispatch","cljs.core/vec","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","G__40752","G__40753","re-frame.core/reg-fx","p__40754","map__40755","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","web3","cljs.core.get.cljs$core$IFn$_invoke$arity$2","on-success","on-failure","e40758","multis.cljs-web3/get-accounts","multis.web3_fx.fn_dispatch.cljs$core$IFn$_invoke$arity$1","e","fexpr__40759","G__40760","G__40761","p__40762","map__40763","address","on-error","e40769","multis.cljs-web3/get-balance","fexpr__40772","G__40776","G__40777","p__40780","map__40781","on-tx-error","gas","on-tx-send","on-tx-receipt","on-tx-complete","on-tx-hash","on-tx-confirmation","abi","bin","e40791","contract","multis.cljs-web3/contract-new","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","multis.cljs-web3/contract-deploy","fexpr__40795","G__40799","G__40800","p__40801","map__40802","e40810","contract-instance","multis.cljs-web3/get-contract","fexpr__40813","fexpr__40811","G__40818","G__40819","p__40824","map__40825","func","args","e40837","multis.cljs-web3/fn-estimate-gas","fexpr__40838","G__40844","G__40845","p__40846","map__40858","e40867","multis.cljs-web3/const-fn-call","fexpr__40868","G__40869","G__40870","p__40875","map__40876","e40883","multis.cljs-web3/fn-send","fexpr__40884","G__40892","G__40893","p__40894","map__40895","token-contract","from","to","deposit","e40897","multis.cljs-web3/approve-tx","fexpr__40898","G__40903","G__40904","p__40905","map__40907","token-address","start-time","sablier-contract","stop-time","e40915","multis.cljs-web3/sablier-create-stream","fexpr__40916"],"sourcesContent":["(ns multis.web3-fx\n  (:require\n   [re-frame.core :as rf]\n\n   [multis.cljs-web3 :as cljs-web3]))\n\n(defn fn-dispatch\n  ([evt]\n   (if evt\n     (fn-dispatch evt [])\n     nil))\n  ([evt args-base]\n   (fn [& args-fn]\n     (rf/dispatch (vec (concat evt args-base args-fn)))\n     nil)))\n\n(rf/reg-fx\n :web3/get-accounts\n (fn [{:keys [:web3 :on-success :on-failure]}]\n   (try\n     (cljs-web3/get-accounts web3 (fn-dispatch on-success) (fn-dispatch on-failure))\n     (catch :default e ((fn-dispatch on-failure) e)))))\n\n(rf/reg-fx\n :web3/get-balance\n (fn [{:keys [:web3 :address :on-success :on-error]}]\n   (try\n     (cljs-web3/get-balance web3 address (fn-dispatch on-success) (fn-dispatch on-error))\n     (catch :default e ((fn-dispatch on-error) e)))))\n\n(rf/reg-fx\n :web3/deploy-contract\n (fn [{:keys [:web3 :abi :bin :address :gas :on-error :on-tx-error :on-tx-hash :on-tx-send :on-tx-receipt :on-tx-confirmation :on-tx-complete]}]\n   (try\n     (let [contract (cljs-web3/contract-new web3 abi bin address gas)]\n       (println :web3/deploy-contract abi bin address gas)\n       (cljs-web3/contract-deploy\n        contract\n        {:on-tx-error (fn-dispatch on-tx-error)\n         :on-tx-hash (fn-dispatch on-tx-hash)\n         :on-tx-send (fn-dispatch on-tx-send)\n         :on-tx-receipt (fn-dispatch on-tx-receipt)\n         :on-tx-confirmation (fn-dispatch on-tx-confirmation)\n         :on-tx-complete (fn-dispatch on-tx-complete)}))\n     (catch :default e ((fn-dispatch on-error) e)))))\n\n(rf/reg-fx\n :web3/get-contract\n (fn [{:keys [:web3 :abi :address :on-success :on-error]}]\n   (try\n     (let [contract-instance (cljs-web3/get-contract web3 abi address)]\n       ((fn-dispatch on-success) contract-instance))\n     (catch :default e\n       ((fn-dispatch on-error) e)))))\n\n\n(rf/reg-fx\n :web3/fn-estimate-gas\n (fn [{:keys [:contract :address :gas :func :args :on-success :on-error]}]\n   (try\n     (cljs-web3/fn-estimate-gas contract address gas func args\n                                (fn-dispatch on-success)\n                                (fn-dispatch on-error))\n     (catch :default e\n       ((fn-dispatch on-error) e)))))\n\n(rf/reg-fx\n :web3/const-fn-call\n (fn [{:keys [:contract :func :args :on-success :on-error]}]\n   (try\n     (cljs-web3/const-fn-call contract func args\n                              (fn-dispatch on-success)\n                              (fn-dispatch on-error))\n     (catch :default e\n       ((fn-dispatch on-error) e)))))\n\n(rf/reg-fx\n :web3/fn-send\n (fn [{:keys [:contract :address :gas :func :args :on-success :on-error]}]\n   (try\n     (cljs-web3/fn-send contract address gas func args\n                        (fn-dispatch on-success)\n                        (fn-dispatch on-error))\n     (catch :default e\n       ((fn-dispatch on-error) e)))))\n\n(rf/reg-fx\n :web3/approve-tx\n (fn [{:keys [:token-contract :from :to :deposit :on-success :on-error]}]\n   (try\n     (cljs-web3/approve-tx token-contract from to deposit\n                           (fn-dispatch on-success)\n                           (fn-dispatch on-error))\n     (catch :default e\n       ((fn-dispatch on-error) e)))))\n\n(rf/reg-fx\n :web3/sablier-create-stream\n (fn [{:keys [:sablier-contract :token-address :from :to :deposit :start-time :stop-time :on-success :on-error]}]\n   (try\n     (cljs-web3/sablier-create-stream sablier-contract token-address from to deposit start-time stop-time\n                                      (fn-dispatch on-success)\n                                      (fn-dispatch on-error))\n     (catch :default e\n       ((fn-dispatch on-error) e)))))"]}