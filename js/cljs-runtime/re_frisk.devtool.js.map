{"version":3,"sources":["re_frisk/devtool.cljs"],"mappings":"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","names":["re-frisk.devtool/ua","js/window.navigator.userAgent","re-frisk.devtool/ie?","or__4185__auto__","cljs.core/re-find","re-frisk.devtool/export-json","temp__5733__auto__","str","cljs.core/deref","cognitect.transit/write","cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2","_","cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2","re-frisk.data/re-frame-data","re-frisk.data/deb-data","js/Blob","js/Array","re-frisk.devtool/json-on-change","event","rdr","js/FileReader","p1__46808#","cljs.core/reset!","re-frisk.data/re-frame-events","G__46811","re-frame.core/dispatch","cognitect.transit/read","cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1","re-frisk.devtool/reagent-debugger-shell","re-frame-data","expand-by-default","p1__46812#","p2__46813#","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs.core/assoc-in","cljs.core.range.cljs$core$IFn$_invoke$arity$1","state-atom","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","re-frisk.style/frisk-style","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","id","x","re-frisk-shell.frisk/Root","re-frisk.devtool/on-window-unload","reagent.dom/unmount-component-at-node","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","re-frisk.devtool/mount","w","d","app","re-frame?","doc","js/document","goog.object/set","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","reagent.core.render.cljs$core$IFn$_invoke$arity$2","and__4174__auto__","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","re-frisk-shell.re-com.views/main","re-frisk.devtool/open-debugger-window","map__46823","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","ext_height","ext_width","js/window.open","re-frisk.debugger-page/html-doc","G__46826","G__46827","G__46828","re-frisk.devtool/visibility-button","visible?","update-fn","var_args","args__4795__auto__","len__4789__auto__","i__4790__auto__","argseq__4796__auto__","cljs.core/IndexedSeq","re-frisk.devtool/re-frisk-panel","seq46833","self__4777__auto__","cljs.core/seq","data","p1__46831#","p2__46832#","cljs.core/count","p__46841","map__46842","re-frisk.devtool/re-frisk-shell","y","width","height","style","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core/not","re-frisk.drag/draggable","re-frisk.style/re-frisk-button-style","re-frisk.drag/mouse-down-handler","re-frisk.style/arrow-style"],"sourcesContent":["(ns re-frisk.devtool\n  (:require-macros [re-frisk.slurp :refer [slurp]])\n  (:require [reagent.core :as reagent]\n            [reagent.dom :as reagent-dom]\n            [re-frisk.drag :as drag]\n            [re-frame.core :refer [dispatch]]\n            [re-frisk.debugger-page :refer [html-doc]]\n            [cognitect.transit :as transit]\n            [re-frisk.data :as data]\n            [re-frisk-shell.re-com.views :as ui-re-com]\n            [re-frisk-shell.frisk :as frisk]\n            [re-frisk.style :as style]))\n\n;;TODO Outdated (Not supported)\n\n(def ua js/window.navigator.userAgent)\n(def ie? (or (re-find #\"MSIE \" ua) (re-find #\"Trident/\" ua) (re-find #\"Edge/\" ua)))\n\n(defn export-json []\n  (if-let [str (transit/write\n                 (transit/writer :json\n                                 {:handlerForForeign\n                                  (fn [_ _] (transit/write-handler (fn [_] \"ForeignType\")\n                                                                   (fn [_] \"\")))})\n                 @(:app-db @data/re-frame-data))]\n      (.saveAs (:win @data/deb-data)\n        (js/Blob. (js/Array. str) {:type \"application/json\"})\n        \"app-db.json\")))\n\n(defn json-on-change [event]\n  (let [rdr (js/FileReader.)]\n    (set! (.-onload rdr) #(do\n                           (reset! data/re-frame-events [])\n                           (dispatch [:re-frisk/update-db (transit/read\n                                                            (transit/reader :json)\n                                                            (.-result (.-target %)))])))\n    (.readAsText rdr (aget (.-files (.-target event)) 0))))\n\n(defn reagent-debugger-shell [re-frame-data]\n  (let [expand-by-default (reduce #(assoc-in %1 [:data-frisk %2 :expanded-paths] #{[]}) {} (range 1))\n        state-atom (reagent/atom expand-by-default)]\n    (fn []\n      [:div {:style style/frisk-style}\n       [:div\n        (map-indexed (fn [id x]\n                       ^{:key id} [frisk/Root x id state-atom]) [@re-frame-data])]])))\n\n(defn on-window-unload []\n  (reagent-dom/unmount-component-at-node (:app @data/deb-data))\n  (swap! data/deb-data assoc :deb-win-closed? true))\n\n;; EXTERNAL DEBUGGER WINDOW\n\n(defn mount [w d]\n  (let [app (.getElementById d \"app\")\n        re-frame? (:app-db @data/re-frame-data)\n        doc js/document]\n    (goog.object/set w \"onunload\" on-window-unload)\n    (swap! data/deb-data assoc :deb-win-closed? false :doc d :win w :app app)\n    (reagent/render [:div {:id \"re-frisk-debugger\" :style {:height \"100%\"}}\n                     [:input {:type \"file\" :id \"json-file-field\" :on-change json-on-change :style {:display \"none\"}}]\n                     [:div  {:style {:height \"100%\"}}\n                      (if (and re-frame? (not= (:events? (:prefs @data/deb-data)) false))\n                        [ui-re-com/main\n                         data/re-frame-data data/re-frame-events\n                         data/deb-data\n                         d\n                         #(.click (.getElementById (:doc @data/deb-data) \"json-file-field\"))\n                         export-json]\n                        [reagent-debugger-shell data/re-frame-data])]]\n                    app)))\n\n\n(defn open-debugger-window []\n  (let [{:keys [ext_height, ext_width]} (:prefs @data/deb-data)\n        w (js/window.open \"\" \"Debugger\" (str \"width=\" (or ext_width 800) \",height=\" (or ext_height 800)\n                                             \",resizable=yes,scrollbars=yes,status=no,directories=no,toolbar=no,menubar=no\"))\n        d (.-document w)]\n    (.open d)\n    (.write d html-doc)\n    (goog.object/set w \"onload\" #(mount w d))\n    (.close d)))\n\n(defn visibility-button\n  [visible? update-fn]\n  [:button {:style {:border 0\n                    :backgroundColor \"transparent\" :width \"20px\" :height \"10px\"}\n            :onClick update-fn}\n   [:svg {:viewBox \"0 0 100 100\"\n          :width \"100%\" :height \"100%\"\n          :style {:transition \"all 0.2s ease\"\n                  :transform (when visible? \"rotate(90deg)\")}}\n    [:polygon {:points \"0,0 0,100 100,50\" :stroke \"black\"}]]])\n\n(defn re-frisk-panel [& data]\n  (let [expand-by-default (reduce #(assoc-in %1 [:data-frisk %2 :expanded-paths] #{[]}) {} (range (count data)))\n        state-atom (reagent/atom expand-by-default)]\n    (fn [& data]\n      [:div\n       (map-indexed (fn [id x]\n                      ^{:key id} [frisk/Root x id state-atom]) [data])])))\n\n;; DRAGGABLE PANEL\n\n(defn re-frisk-shell [{:keys [x y width height]}]\n  (let [style (merge style/frisk-style {:resize \"both\" :width \"300px\" :height \"200px\"})\n        height (if (and ie? (not height)) 200 height)\n        style (merge style (when height {:height height :max-height height :overflow \"auto\"}))\n        style (merge style (when width {:width width :max-width width :overflow \"auto\"}))]\n    (when x (swap! drag/draggable assoc :x x))\n    (when y (swap! drag/draggable assoc :y y))\n    (fn [_]\n      (when (:deb-win-closed? @data/deb-data)\n        [:div {:style (merge {:position \"fixed\"\n                              :left (str (:x @drag/draggable) \"px\")\n                              :top (str (:y @drag/draggable) \"px\")\n                              :z-index 999}\n                             (when (or ie? (not (:x @drag/draggable)))\n                               {:bottom \"0px\"\n                                :right  \"20px\"}))}\n         [:div {:style style/re-frisk-button-style\n                :on-mouse-down drag/mouse-down-handler}\n          [visibility-button\n           (:visible? (:data-frisk @data/deb-data))\n           (fn [_]\n             (swap! data/deb-data assoc-in [:data-frisk :visible?] (not (:visible? (:data-frisk @data/deb-data)))))]\n          \"re-frisk\"]\n         [:div {:style style/arrow-style\n                :on-click open-debugger-window}\n          \"\\u2197\"]\n         (when (:visible? (:data-frisk @data/deb-data))\n           [:div {:style style}\n            [re-frisk-panel @data/re-frame-data]])]))))\n"]}