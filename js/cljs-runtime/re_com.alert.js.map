{"version":3,"sources":["re_com/alert.cljs"],"mappingssFC,AAAgDC,AAChDC,AACAA,AACAC,AAEAC,AACAD,AACAE,AACAC;AAE3F,AAAA;;;AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAMD;AAAN,AAAA,AAAAE,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAIYoB;AAJZ,AAAAhB,AAAAJ,AAAA,AAEgDe;AAFhD,AAAAX,AAAAJ,AAAA,AAEmCa;AAFnC,AAAAT,AAAAJ,AAAA,AAEgFmB;AAFhF,AAAAf,AAAAJ,AAAA,AAE2BY;AAF3B,AAAAR,AAAAJ,AAAA,AAE2DgB;AAF3D,AAAAX,AAAAL,AAAA,AAAA,AAEgBW;AAFhB,AAAAP,AAAAJ,AAAA,AAE0EkB;AAF1E,AAAAd,AAAAJ,AAAA,AAEaU;AAFb,AAAAN,AAAAJ,AAAA,AAEoEiB;AAFpE,AAAAb,AAAAJ,AAAA,AAEwCc;AAFxC,AAAA,AAKS,AAAA,AAAAO,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAqBvC,AAAoBoC;AALlD;AAAA,AAAA,AAAA,AAAAd,AAAA;;;AAME,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMkB,AAAcC,AAGU,AAAAC;AAAA,AAAY,AAACV,AAAAA,AAAAA,AAASN,AAAAA;;AAAtB;AAH9B,AAAA;AAKMiB,AAAa,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACjB,AAAAA,AAAAA;;AALpB,AAAA,AAAA,AAUG,AAAA,AAAA,AAAA,AAACkB,AAAc,AAAA,AAAA,AAA+BF,AAAgBV,AAC/C,AAAA,AAAA,AAACY,AAAM,AAAA,AAACC,AACS,AAAA,AAAA,AAAMhB,AAAQA,AACxBI,AACfC,AACP,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMP,AACHmB,AAG0B,AAAA,AAAA,AAAIlB,AAGlBD,AACD,AAAM,AAAAoB,AAAKjB;AAAL,AAAA,AAAAiB;AAAgBhB;;AAAhBgB;;AARpB,AAQc,AAAA,AACER,AAChB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMX,AACHkB,AAGiBlB,AACN,AAAM,AAAA,AAAAmB,AAAK,AAACC,AAAIrB,AAASG;AAAnB,AAAA,AAAAiB;AAA8BhB;;AAA9BgB;;AALpB,AAKc,AAAA,AAAM,AACJR;;;AArCrlH,AAAA;;;;;;;;;;;;;AAAA,AAAAC,AAAM4C;AAAN,AAAA,AAAA3C,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA2C,AAAAxC;;;AAAA,AAAA,AAAA,AAAA,AAAAyC,AAAMD;AAAN,AAAA,AAAAE,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAArC,AAAA,AAAAqC,AAAA,AAAA,AAAA,AAAA,AAAApC,AAAAC,AAAAmC,AAAAA;AAAAA,AAcYlB;AAdZ,AAAAhB,AAAAkC,AAAA,AAYaE;AAZb,AAAApC,AAAAkC,AAAA,AAYoBtB;AAZpB,AAAAZ,AAAAkC,AAAA,AAY6BG;AAZ7B,AAAApC,AAAAiC,AAAA,AAAA,AAYwCxB;AAZxC,AAAAV,AAAAkC,AAAA,AAYgDI;AAZhD,AAAAtC,AAAAkC,AAAA,AAY6DrB;AAZ7D,AAAAb,AAAAkC,AAAA,AAYmEpB;AAZnE,AAAAd,AAAAkC,AAAA,AAYyEnB;AAZzE,AAAA,AAeS,AAAA,AAAAE,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAqBW,AAAqBd;AAfnD;AAAA,AAAA,AAAA,AAAAd,AAAA;;;AAgBE,AAAMkC,AAAO,AAACG,AAAeH;AAA7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACGI,AACQC,AACS/B,AACD4B,AACDzB,AACAC,AACDC,AACE2B,AAEuBL,AACZM,AAEW,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAA1C,AAAAwC;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAC,AAAAH;AAAA,AAAAI,AA60EQ,AAAAkB,AAAAtB;AA70ERK,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAA,AAAAK,AAAAN,AAAAK,AAAMU;AAAN,AAAA,AAAA,AAAAR,AAAAJ,AACE,AAAAa,AAA8DD;AAA9DC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAApE,AAAA,AAAAoE,AAAA,AAAA,AAAA,AAAA,AAAAnE,AAAAC,AAAAkE,AAAAA;AAAA,AAAAjE,AAAAiE,AAAA,AAAc3D;AAAd,AAAAN,AAAAiE,AAAA,AAAiB1D;AAAjB,AAAAP,AAAAiE,AAAA,AAA4BzD;AAA5B,AAAAR,AAAAiE,AAAA,AAAoCxD;AAApC,AAAAT,AAAAiE,AAAA,AAAyCvD;AAAzC,AAAAV,AAAAiE,AAAA,AAAiDtD;AAAjD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACSL,AAAKZ,AACIY,AACQC,AACAC,AACAC,AACAC,AACAC,AACAC;;;AAT5B,AAAA,AAAA0C,AAAA;;;;AAAA;;;;;AAAA,AAAAG,AAAA,AAAAC,AAAAN,AAAA,AAAAO,AAAA,AAAAC,AAAAf;;AAAA,AAAAY,AAAA,AAAAC,AAAAN,AAAA;;;AAAA,AAAA,AAAAS,AAAAhB,AAAMmB;AAAN,AAAA,AAAAF,AACE,AAAAI,AAA8DF;AAA9DE,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAArE,AAAA,AAAAqE,AAAA,AAAA,AAAA,AAAA,AAAApE,AAAAC,AAAAmE,AAAAA;AAAA,AAAAlE,AAAAkE,AAAA,AAAc5D;AAAd,AAAAN,AAAAkE,AAAA,AAAiB3D;AAAjB,AAAAP,AAAAkE,AAAA,AAA4B1D;AAA5B,AAAAR,AAAAkE,AAAA,AAAoCzD;AAApC,AAAAT,AAAAkE,AAAA,AAAyCxD;AAAzC,AAAAV,AAAAkE,AAAA,AAAiDvD;AAAjD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACSL,AAAKZ,AACIY,AACQC,AACAC,AACAC,AACAC,AACAC,AACAC;AAT5B,AAAA+C,AAAA,AAAAI,AAAAlB;;;AAAA;;;;AAAA,AAAA;;AAAA,AAAA,AAAAD,AAAYR;;;;AA7BvD,AAAA,AAAA,AAAMJ;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAA5B,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAA8B;;;AAAA","names":["re-com.alert/alert-box-args-desc","re-com.validate/alert-type?","re-com.validate/alert-types-list","re-com.validate/string-or-hiccup?","cljs.core/string?","cljs.core/fn?","re-com.validate/css-style?","re-com.validate/html-attr?","var_args","args__4795__auto__","len__4789__auto__","i__4790__auto__","argseq__4796__auto__","cljs.core/IndexedSeq","re-com.alert/alert-box","p__45849","map__45850","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.get.cljs$core$IFn$_invoke$arity$3","js/Error","seq45839","self__4777__auto__","cljs.core/seq","id","alert-type","heading","body","padding","closeable?","on-close","class","style","attr","args","js/goog.DEBUG","re_com.validate.validate_args.cljs$core$IFn$_invoke$arity$variadic","re-com.validate/extract-arg-data","close-button","re-com.buttons/button","event","alert-class","G__45856","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","re-com.box/flex-child-style","re-com.box/h-box","and__4174__auto__","cljs.core/not","re-com.alert/alert-list-args-desc","re-com.validate/vector-of-maps?","re-com.alert/alert-list","p__45864","map__45866","seq45862","alerts","max-height","border-style","re-com.util/deref-or-value","re-com.box/box","re-com.box/border","re-com.box/scroller","re-com.box/v-box","iter__4582__auto__","s__45876","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__45878","cljs.core/chunk-buffer","i__45877","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__45875","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","alert","map__45895","map__45905","cljs.core/chunk-first"],"sourcesContent":["(ns re-com.alert\r\n  (:require-macros [re-com.core :refer [handler-fn]])\r\n  (:require [re-com.util     :refer [deref-or-value]]\r\n            [re-com.buttons  :refer [button]]\r\n            [re-com.box      :refer [h-box v-box box scroller border flex-child-style]]\r\n            [re-com.validate :refer [string-or-hiccup? alert-type? alert-types-list\r\n                                     vector-of-maps? css-style? html-attr?] :refer-macros [validate-args-macro]]))\r\n\r\n;;--------------------------------------------------------------------------------------------------\r\n;; Component: alert\r\n;;--------------------------------------------------------------------------------------------------\r\n\r\n(def alert-box-args-desc\r\n  [{:name :id         :required false                 :type \"anything\"                                       :description [:span \"a unique identifier, usually an integer or string.\"]}\r\n   {:name :alert-type :required false :default :info  :type \"keyword\"         :validate-fn alert-type?       :description [:span \"one of \" alert-types-list]}\r\n   {:name :heading    :required false                 :type \"string | hiccup\" :validate-fn string-or-hiccup? :description [:span \"displayed as a larger heading. One of \" [:code \":heading\"] \" or \" [:code \":body\"] \" should be provided\"]}\r\n   {:name :body       :required false                 :type \"string | hiccup\" :validate-fn string-or-hiccup? :description \"displayed within the body of the alert\"}\r\n   {:name :padding    :required false :default \"15px\" :type \"string\"          :validate-fn string?           :description \"padding surounding the alert\"}\r\n   {:name :closeable? :required false :default false  :type \"boolean\"                                        :description [:span \"if true, render a close button. \" [:code \":on-close\"] \" should be supplied\"]}\r\n   {:name :on-close   :required false                 :type \":id -> nil\"      :validate-fn fn?               :description [:span \"called when the user clicks the close 'X' button. Passed the \" [:code \":id\"] \" of the alert to close\"]}\r\n   {:name :class      :required false                 :type \"string\"          :validate-fn string?           :description \"CSS classes (whitespace separated). Applied to outer container\"}\r\n   {:name :style      :required false                 :type \"CSS style map\"   :validate-fn css-style?        :description \"CSS styles. Applied to outer container\"}\r\n   {:name :attr       :required false                 :type \"HTML attr map\"   :validate-fn html-attr?        :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed. Applied to outer container\"]}])\r\n\r\n(defn alert-box\r\n  \"Displays one alert box. A close button allows the message to be removed\"\r\n  [& {:keys [id alert-type heading body padding closeable? on-close class style attr]\r\n      :or   {alert-type :info}\r\n      :as   args}]\r\n  {:pre [(validate-args-macro alert-box-args-desc args \"alert-box\")]}\r\n  (let [close-button [button\r\n                      :label    [:i {:class \"zmdi created zmdi-hc-fw-rc zmdi-close\"\r\n                                     :style {:font-size \"20px\"}}]    ;\"\u00d7\"\r\n                      :on-click (handler-fn (on-close id))\r\n                      :class    \"close\"]\r\n        alert-class  (alert-type {:none           \"\"\r\n                                  :info           \"alert-success\"\r\n                                  :warning        \"alert-warning\"\r\n                                  :danger         \"alert-danger\"})]\r\n    [:div\r\n     (merge {:class (str \"rc-alert alert fade in \" alert-class \" \" class)\r\n             :style (merge (flex-child-style \"none\")\r\n                           {:padding (when padding padding)}\r\n                           style)}\r\n            attr)\r\n     (when heading\r\n       [h-box\r\n        :justify  :between\r\n        :align    :center\r\n        :style    {:margin-bottom (if body \"10px\" \"0px\")}\r\n        :children [[:h4\r\n                    {:style {:margin-bottom \"0px\"}} ;; Override h4\r\n                    heading]\r\n                   (when (and closeable? on-close)\r\n                     close-button)]])\r\n     (when body\r\n       [h-box\r\n        :justify  :between\r\n        :align    :center\r\n        :children [[:div body]\r\n                   (when (and (not heading) closeable? on-close)\r\n                     close-button)]])]))\r\n\r\n;;--------------------------------------------------------------------------------------------------\r\n;; Component: alert-list\r\n;;--------------------------------------------------------------------------------------------------\r\n\r\n(def alert-list-args-desc\r\n  [{:name :alerts       :required true                                 :type \"vector of maps | atom\" :validate-fn vector-of-maps? :description \"alerts to render (in the order supplied). Can also be a list of maps\"}\r\n   {:name :on-close     :required true                                 :type \":id -> nil\"            :validate-fn fn?             :description [:span \"called when the user clicks the close 'X' button. Passed the alert's \" [:code \":id\"]]}\r\n   {:name :max-height   :required false                                :type \"string\"                :validate-fn string?         :description \"CSS style for maximum list height. By default, it grows forever\"}\r\n   {:name :padding      :required false :default \"4px\"                 :type \"string\"                :validate-fn string?         :description \"CSS padding within the alert\"}\r\n   {:name :border-style :required false :default \"1px solid lightgrey\" :type \"string\"                :validate-fn string?         :description \"CSS border style surrounding the list\"}\r\n   {:name :class        :required false                                :type \"string\"                :validate-fn string?         :description \"CSS class names, space separated. Applied to outer container\"}\r\n   {:name :style        :required false                                :type \"CSS style map\"         :validate-fn css-style?      :description \"CSS styles. Applied to outer container\"}\r\n   {:name :attr         :required false                                :type \"HTML attr map\"         :validate-fn html-attr?      :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed. Applied to outer container\"]}])\r\n\r\n(defn alert-list\r\n  \"Displays a list of alert-box components in a v-box. Sample alerts object:\r\n     [{:id 2\r\n       :alert-type :warning\r\n       :heading \\\"Heading\\\"\r\n       :body \\\"Body\\\"\r\n       :padding \\\"8px\\\"\r\n       :closeable? true}\r\n      {:id 1\r\n       :alert-type :info\r\n       :heading \\\"Heading\\\"\r\n       :body \\\"Body\\\"}]\"\r\n  [& {:keys [alerts on-close max-height padding border-style class style attr]\r\n      :or   {padding \"4px\"}\r\n      :as   args}]\r\n  {:pre [(validate-args-macro alert-list-args-desc args \"alert-list\")]}\r\n  (let [alerts (deref-or-value alerts)]\r\n    [box\r\n     :child [border\r\n             :padding padding\r\n             :border border-style\r\n             :class class\r\n             :style style\r\n             :attr attr\r\n             :child [scroller\r\n                     :v-scroll :auto\r\n                     :style    {:max-height max-height}\r\n                     :child    [v-box\r\n                                :size     \"auto\"\r\n                                :children [(for [alert alerts]\r\n                                             (let [{:keys [id alert-type heading body padding closeable?]} alert]\r\n                                               ^{:key id} [alert-box\r\n                                                           :id id\r\n                                                           :alert-type alert-type\r\n                                                           :heading    heading\r\n                                                           :body       body\r\n                                                           :padding    padding\r\n                                                           :closeable? closeable?\r\n                                                           :on-close   on-close]))]]]]]))\r\n"]}