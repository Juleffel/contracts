{"version":3,"sources":["multis/views.cljs"],"mappings":"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","names":["multis.views/<sub","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core/deref","re-frame.core/subscribe","multis.views/>evt","re-frame.core/dispatch","multis.views/form-events","path","G__54757","value","G__54758","G__54759","p1__54760#","multis.views/form-new-recipient-template","G__54761","multis.views/form-new-recipient","reagent-forms.core/bind-fields","p__54762","map__54763","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","multis.views/account-row","address","eth","selected-key","text","selected-address","G__54765","G__54766","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","multis.views/accounts-list-component","accounts","cljs.core.map.cljs$core$IFn$_invoke$arity$2","account","multis.views/user-accounts-component","temp__5733__auto__","G__54767","cljs.core/count","multis.views/recipients-component","G__54768","multis.views/stream-form-template","p1__54769#","multis.views/stream-form","G__54770","stream-valid?","G__54771","cljs.core/not","multis.views/now","js/Date","multis.views/test-buttons","G__54772","G__54773","G__54774","G__54775","G__54776","G__54777","multis.views/stream-tokens-component","multis.views/root-component"],"sourcesContent":["(ns multis.views\n  (:require\n   [re-frame.core :as rf]\n   [reagent-forms.core :refer [bind-fields]]))\n\n(def <sub (comp deref re-frame.core/subscribe))\n(def >evt re-frame.core/dispatch)\n\n(def form-events\n  {:get (fn [path] (<sub [:form-value path]))\n   :save! (fn [path value] (>evt [:form-set-value path value]))\n   :doc (fn [] (<sub [:form-doc]))})\n\n(def form-new-recipient-template\n  [:form\n   {:on-submit #(do\n                  (. % preventDefault)\n                  (>evt [:app/form-submit-new-recipient]))}\n   [:input.input {:field :text :id :new-recipient-address :placeholder \"Type a recipient address (0x...)\"}]\n   [:input.button {:type \"submit\" :value \"Add new recipient\"}]])\n\n(comment\n  {:valid? #(if-not (<sub :new-recipient-address-valid?)\n              [\"Address must do 42 characters\"])})\n\n(defn form-new-recipient\n  []\n  [bind-fields form-new-recipient-template form-events])\n\n(defn account-row\n  [{:keys [address eth]} selected-key]\n  (let [text (if eth (str address \": \" eth \" ETH\") address)\n       selected-address (<sub [:form-value [selected-key]])]\n    [:div.account-row\n     {:on-click #(>evt [:form-set-value [selected-key] address])\n      :class [(when (= selected-address address) \"selected\")]}\n     text]))\n\n(defn accounts-list-component\n  [accounts selected-key]\n  [:div.accounts-list\n   (map\n    (fn [account]\n      ^{:key (:address account)}\n      [:div\n       [account-row account selected-key]])\n    accounts)])\n\n(defn user-accounts-component\n  []\n  (if-let [accounts (<sub [:user-accounts])]\n    [:div.accounts\n     (if (< 1 (count accounts))\n       [:div.accounts__title \"List of your accounts\"]\n       [:div.accounts__title \"Your account\"])\n     (accounts-list-component accounts :selected-user-account)]\n    [:div.accounts\n     [:div.accounts__title \"Please install Metamask first\"]]))\n\n(defn recipients-component\n  []\n  (let [accounts (<sub [:recipient-accounts])]\n    [:div.accounts\n     [:div.accounts__title \"Recipients\"]\n     (accounts-list-component accounts :selected-recipient-account)\n     [form-new-recipient]]))\n\n(def stream-form-template\n  [:div.stream-inputs\n   [:span \"Stream \"]\n   [:input.input.input-inline {:field :text :id :stream-amount :placeholder \"1000\"}]\n   [:span \" tokens over \"]\n   [:input.input.input-inline {:field :text :id :stream-duration :placeholder \"24\"}]\n   [:span \" hours \"]])\n\n(defn stream-form\n  []\n  [:form.stream-form\n   {:on-submit #(do\n                  (. % preventDefault)\n                  (>evt [:app/form-submit-create-stream]))}\n   [:div.stream-form__title \"Stream tokens\"]\n   [bind-fields stream-form-template form-events]\n   (let [stream-valid? (<sub [:stream-values-valid?])]\n     [:input.button {:type \"submit\" :value \"Stream\"\n                     :disabled (not stream-valid?)}])])\n\n(defn now [] (int (/ (.now js/Date) 1000)))\n;(defn now [] (.now js/Date))\n\n(defn test-buttons\n  []\n  [:div\n   [:div.refresh-accounts\n    [:button\n     {:on-click #(>evt [:app/load-accounts])}\n     \"Refresh accounts\"]]\n   [:div.deploy-contract\n    [:button\n     {:on-click #(>evt [:app/deploy-db-contract \"test\"])}\n     \"Deploy contract\"]]\n   [:div.test-txn\n    [:button\n     {:on-click #(>evt [:app/test-rectangle-estimate\n                        {:width 2\n                         :height 3}])}\n     \"Estimate gas for test transaction\"]]\n   [:div.test-txn\n    [:button\n     {:on-click #(>evt [:app/test-rectangle\n                        {:width 2\n                         :height 3}])}\n     \"Test transaction\"]]\n   [:div.load-accounts-contracts\n    [:button\n     {:on-click #(>evt [:app/get-accounts-contracts])}\n     \"Load accounts contracts\"]]\n   [:div.stream\n    [:button\n     {:on-click #(>evt [:app/sablier-create-stream\n                        {:from \"0x681FbA7ceF62673C01184cFa832CE3CE298d7e86\"\n                         :to \"0x8d8ddefafdf23feea24a6de9b3940ea6e5f54a3d\"\n                         :deposit \"60000\"\n                         :start-time (+ (now) 120)\n                         :stop-time (+ (now) 120 60)}])}\n     \"Stream tokens\"]]])\n\n(defn stream-tokens-component\n  []\n  [:section.stream-tokens\n   [:div\n     [user-accounts-component]\n     [recipients-component]\n     [stream-form]]])\n\n(defn root-component []\n  [:div\n   [:header\n    [:h2 \"Multis interview - Julien Fleury\"]]\n   [stream-tokens-component]])\n"]}