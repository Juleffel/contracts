{"version":3,"sources":["multis/views.cljs"],"mappings":"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","names":["multis.views/<sub","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core/deref","re-frame.core/subscribe","multis.views/>evt","re-frame.core/dispatch","multis.views/form-events","path","G__54094","value","G__54095","G__54096","p1__54097#","multis.views/form-new-recipient-template","G__54098","multis.views/form-new-recipient","reagent-forms.core/bind-fields","p__54099","map__54100","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","multis.views/account-row","address","eth","selected-key","text","selected-address","G__54102","G__54103","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","multis.views/accounts-list-component","accounts","cljs.core.map.cljs$core$IFn$_invoke$arity$2","account","multis.views/user-accounts-component","temp__5733__auto__","G__54104","cljs.core/count","multis.views/recipients-component","G__54105","multis.views/stream-form-template","p1__54106#","multis.views/stream-form","G__54107","stream-valid?","G__54108","cljs.core/not","multis.views/now","js/Date","multis.views/test-buttons","G__54109","G__54110","G__54111","G__54112","G__54113","G__54114","multis.views/stream-tokens-component","multis.views/root-component"],"sourcesContent":["(ns multis.views\r\n  (:require\r\n   [re-frame.core :as rf]\r\n   [reagent-forms.core :refer [bind-fields]]))\r\n\r\n(def <sub (comp deref re-frame.core/subscribe))\r\n(def >evt re-frame.core/dispatch)\r\n\r\n(def form-events\r\n  {:get (fn [path] (<sub [:form-value path]))\r\n   :save! (fn [path value] (>evt [:form-set-value path value]))\r\n   :doc (fn [] (<sub [:form-doc]))})\r\n\r\n(def form-new-recipient-template\r\n  [:form\r\n   {:on-submit #(do\r\n                  (. % preventDefault)\r\n                  (>evt [:app/form-submit-new-recipient]))}\r\n   [:input.input {:field :text :id :new-recipient-address :placeholder \"Type a recipient address (0x...)\"}]\r\n   [:input.button {:type \"submit\" :value \"Add new recipient\"}]])\r\n\r\n(comment\r\n  {:valid? #(if-not (<sub :new-recipient-address-valid?)\r\n              [\"Address must do 42 characters\"])})\r\n\r\n(defn form-new-recipient\r\n  []\r\n  [bind-fields form-new-recipient-template form-events])\r\n\r\n(defn account-row\r\n  [{:keys [address eth]} selected-key]\r\n  (let [text (if eth (str address \": \" eth \" ETH\") address)\r\n       selected-address (<sub [:form-value [selected-key]])]\r\n    [:div.account-row\r\n     {:on-click #(>evt [:form-set-value [selected-key] address])\r\n      :class [(when (= selected-address address) \"selected\")]}\r\n     text]))\r\n\r\n(defn accounts-list-component\r\n  [accounts selected-key]\r\n  [:div.accounts-list\r\n   (map\r\n    (fn [account]\r\n      ^{:key (:address account)}\r\n      [:div\r\n       [account-row account selected-key]])\r\n    accounts)])\r\n\r\n(defn user-accounts-component\r\n  []\r\n  (if-let [accounts (<sub [:user-accounts])]\r\n    [:div.accounts\r\n     (if (< 1 (count accounts))\r\n       [:div.accounts__title \"List of your accounts\"]\r\n       [:div.accounts__title \"Your account\"])\r\n     (accounts-list-component accounts :selected-user-account)]\r\n    [:div.accounts\r\n     [:div.accounts__title \"Please install Metamask first\"]]))\r\n\r\n(defn recipients-component\r\n  []\r\n  (let [accounts (<sub [:recipient-accounts])]\r\n    [:div.accounts\r\n     [:div.accounts__title \"Recipients\"]\r\n     (accounts-list-component accounts :selected-recipient-account)\r\n     [form-new-recipient]]))\r\n\r\n(def stream-form-template\r\n  [:div.stream-inputs\r\n   [:span \"Stream \"]\r\n   [:input.input.input-inline {:field :text :id :stream-amount :placeholder \"1000\"}]\r\n   [:span \" tokens over \"]\r\n   [:input.input.input-inline {:field :text :id :stream-duration :placeholder \"24\"}]\r\n   [:span \" hours \"]])\r\n\r\n(defn stream-form\r\n  []\r\n  [:form.stream-form\r\n   {:on-submit #(do\r\n                  (. % preventDefault)\r\n                  (>evt [:app/form-submit-create-stream]))}\r\n   [:div.stream-form__title \"Stream tokens\"]\r\n   [bind-fields stream-form-template form-events]\r\n   (let [stream-valid? (<sub [:stream-values-valid?])]\r\n     [:input.button {:type \"submit\" :value \"Stream\"\r\n                     :disabled (not stream-valid?)}])])\r\n\r\n(defn now [] (int (/ (.now js/Date) 1000)))\r\n;(defn now [] (.now js/Date))\r\n\r\n(defn test-buttons\r\n  []\r\n  [:div\r\n   [:div.refresh-accounts\r\n    [:button\r\n     {:on-click #(>evt [:app/load-accounts])}\r\n     \"Refresh accounts\"]]\r\n   [:div.deploy-contract\r\n    [:button\r\n     {:on-click #(>evt [:app/deploy-db-contract \"test\"])}\r\n     \"Deploy contract\"]]\r\n   [:div.test-txn\r\n    [:button\r\n     {:on-click #(>evt [:app/test-rectangle-estimate\r\n                        {:width 2\r\n                         :height 3}])}\r\n     \"Estimate gas for test transaction\"]]\r\n   [:div.test-txn\r\n    [:button\r\n     {:on-click #(>evt [:app/test-rectangle\r\n                        {:width 2\r\n                         :height 3}])}\r\n     \"Test transaction\"]]\r\n   [:div.load-accounts-contracts\r\n    [:button\r\n     {:on-click #(>evt [:app/get-accounts-contracts])}\r\n     \"Load accounts contracts\"]]\r\n   [:div.stream\r\n    [:button\r\n     {:on-click #(>evt [:app/sablier-create-stream\r\n                        {:from \"0x681FbA7ceF62673C01184cFa832CE3CE298d7e86\"\r\n                         :to \"0x8d8ddefafdf23feea24a6de9b3940ea6e5f54a3d\"\r\n                         :deposit \"60000\"\r\n                         :start-time (+ (now) 120)\r\n                         :stop-time (+ (now) 120 60)}])}\r\n     \"Stream tokens\"]]])\r\n\r\n(defn stream-tokens-component\r\n  []\r\n  [:section.stream-tokens\r\n   [:div\r\n     [user-accounts-component]\r\n     [recipients-component]\r\n     [stream-form]]])\r\n\r\n(defn root-component []\r\n  [:div\r\n   [:header\r\n    [:h2 \"Multis interview - Julien Fleury\"]]\r\n   [stream-tokens-component]])\r\n"]}